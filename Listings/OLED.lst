C51 COMPILER V9.57.0.0   OLED                                                              08/17/2020 22:42:09 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE OLED.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\OLED.lst) TABS(2) OBJECT(.\Objects\OLED.obj)

line level    source

   1          #include "OLED.H"
   2          #include "i2c.h"
   3          #include "OLEDFONT.H"
   4          
   5          void delay_ms(unsigned int ms)
   6          {                         
   7   1        unsigned int a;
   8   1        while(ms)
   9   1        {
  10   2          a=1800;
  11   2          while(a--);
  12   2          ms--;
  13   2        }
  14   1        return;
  15   1      }
  16          
  17          void OLED_WR_Byte(u8 dat,u8 mode)
  18          {
  19   1        Start();
  20   1        SendData(0x78);
  21   1        RecvACK();
  22   1        if(mode){SendData(0x40);}
  23   1        else{SendData(0x00);}
  24   1        RecvACK();
  25   1        SendData(dat);
  26   1        RecvACK();
  27   1        Stop();
  28   1      }
  29          
  30          //反显函数
  31          void OLED_ColorTurn(u8 i)
  32          {
  33   1        if(i==0)
  34   1          {
  35   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  36   2          }
  37   1        if(i==1)
  38   1          {
  39   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  40   2          }
  41   1      }
  42          
  43          //屏幕旋转180度
  44          void OLED_DisplayTurn(u8 i)
  45          {
  46   1        if(i==0)
  47   1          {
  48   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
  49   2            OLED_WR_Byte(0xA1,OLED_CMD);
  50   2          }
  51   1        if(i==1)
  52   1          {
  53   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  54   2            OLED_WR_Byte(0xA0,OLED_CMD);
C51 COMPILER V9.57.0.0   OLED                                                              08/17/2020 22:42:09 PAGE 2   

  55   2          }
  56   1      }
  57          
  58          void OLED_Set_Pos(u8 x, u8 y) 
  59          { 
  60   1        x+=2;
  61   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
  62   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  63   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
  64   1      }
  65          
  66          void OLED_Display_On(void)
  67          {
  68   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  69   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  70   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  71   1      }
  72          
  73          void OLED_Display_Off(void)
  74          {
  75   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  76   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  77   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  78   1      }
  79          
  80          void OLED_Clear(void)  
  81          {  
  82   1        u8 i,n;       
  83   1        for(i=0;i<8;i++)  
  84   1        {  
  85   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  86   2          OLED_WR_Byte (0x02,OLED_CMD);      //设置显示位置―列低地址
  87   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  88   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  89   2        } //更新显示
  90   1      }
  91          
  92          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
  93          {       
  94   1        u8 c=0,sizex=sizey/2;
  95   1        u16 i=0,size1;
  96   1        if(sizey==8)size1=6;
  97   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
  98   1        c=chr-' ';//得到偏移后的值
  99   1        OLED_Set_Pos(x,y);
 100   1        for(i=0;i<size1;i++)
 101   1        {
 102   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 103   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 104   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 105   2      //    else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 106   2          else return;
 107   2        }
 108   1      }
 109          
 110          u32 oled_pow(u8 m,u8 n)
 111          {
 112   1        u32 result=1;  
 113   1        while(n--)result*=m;    
 114   1        return result;
 115   1      }         
 116          //显示数字
C51 COMPILER V9.57.0.0   OLED                                                              08/17/2020 22:42:09 PAGE 3   

 117          //x,y :起点坐标
 118          //num:要显示的数字
 119          //len :数字的位数
 120          //sizey:字体大小      
 121          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 122          {           
 123   1        u8 t,temp,m=0;
 124   1        u8 enshow=0;
 125   1        if(sizey==8)m=2;
 126   1        for(t=0;t<len;t++)
 127   1        {
 128   2          temp=(num/oled_pow(10,len-t-1))%10;
 129   2          if(enshow==0&&t<(len-1))
 130   2          {
 131   3            if(temp==0)
 132   3            {
 133   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 134   4              continue;
 135   4            }else enshow=1;
 136   3          }
 137   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 138   2        }
 139   1      }
 140          //显示一个字符号串
 141          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 142          {
 143   1        u8 j=0;
 144   1        while (chr[j]!='\0')
 145   1        {   
 146   2          OLED_ShowChar(x,y,chr[j++],sizey);
 147   2          if(sizey==8)x+=6;
 148   2          else x+=sizey/2;
 149   2        }
 150   1      }
 151          
 152          //显示图片
 153          //x,y显示坐标
 154          //sizex,sizey,图片长宽
 155          //BMP：要显示的图片
 156          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 157          {   
 158   1        u16 j=0;
 159   1        u8 i,m;
 160   1        sizey=sizey/8+((sizey%8)?1:0);
 161   1        for(i=0;i<sizey;i++)
 162   1        {
 163   2          OLED_Set_Pos(x,i+y);
 164   2          for(m=0;m<sizex;m++)
 165   2          {      
 166   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 167   3          }
 168   2        }
 169   1      } 
 170          
 171          
 172          void OLED_Init(void)
 173          {
 174   1        //OLED_RES_Clr();
 175   1        delay_ms(200);
 176   1        //OLED_RES_Set();
 177   1        
 178   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
C51 COMPILER V9.57.0.0   OLED                                                              08/17/2020 22:42:09 PAGE 4   

 179   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 180   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 181   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 182   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 183   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 184   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 185   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 186   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 187   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 188   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 189   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 190   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 191   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 192   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 193   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 194   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 195   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 196   1        OLED_WR_Byte(0x12,OLED_CMD);
 197   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 198   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 199   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 200   1        OLED_WR_Byte(0x02,OLED_CMD);//
 201   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 202   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 203   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 204   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 205   1        OLED_Clear();
 206   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1012    ----
   CONSTANT SIZE    =   2072    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      46
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
